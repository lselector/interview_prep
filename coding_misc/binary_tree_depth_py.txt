#! python

"""
# Find depth of a binary tree
# (number of nodes along the longest path from root down)
"""

# ---------------------------
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# --------------------------------------------------------------
# Recursive:
# --------------------------------------------------------------
def maxDepth(root):
    if root == None:
        return 0
    return max(self.maxDepth(root.left),self.maxDepth(root.right))+1

# --------------------------------------------------------------
# Iterative:
# --------------------------------------------------------------
def maxDepth(root):
    if root == None:
        return 0
    nodeStack = [root];
    depthStack = [1];
    maxDepth = 0;
    while len(nodeStack)>0:
        node = nodeStack.pop();
        depth = depthStack.pop();
        maxDepth = max(maxDepth, depth)
        if node.left != None:
            nodeStack.append(node.left)
            depthStack.append(depth+1)
        if node.right != None:
            nodeStack.append(node.right)
            depthStack.append(depth+1)
    return maxDepth