// ---------------------------------------------------
// simple hackerrank problem
//    for a square matrix of integers,
//    calculate absolute value of difference between two numbers:
//      a sum of diagonal elements
//      a summ of cross-diagonal elements
// ---------------------------------------------------

package main

import (
    "bufio"
    "fmt"
    "io"
    "os"
    "strconv"
    "strings"
)

// ---------------------------------------------------
func diagonalDifference(a [][]int32) int32 {
    n := len(a)
    tmp1 := int32(0)
    tmp2 := int32(0)
    for ii:=0; ii<n; ii++ {
        tmp1 += a[ii][ii]
        tmp2 += a[ii][n-1-ii]
    }
    mydif := tmp1 - tmp2
    if mydif < 0 {
        mydif = - mydif
    }
    return mydif
}

// ---------------------------------------------------
func main() {
    reader := bufio.NewReaderSize(os.Stdin, 1024 * 1024)

    outputFile, err := os.Create(os.Getenv("OUTPUT_PATH"))
    checkError(err)

    defer outputFile.Close()

    writer := bufio.NewWriterSize(outputFile, 1024 * 1024)

    nTemp, err := strconv.ParseInt(readLine(reader), 10, 64)
    checkError(err)
    n := int32(nTemp)

    var a [][]int32
    for aRowItr := 0; aRowItr < int(n); aRowItr++ {
        aRowTemp := strings.Split(readLine(reader), " ")

        var aRow []int32
        for _, aRowItem := range aRowTemp {
            aItemTemp, err := strconv.ParseInt(aRowItem, 10, 64)
            checkError(err)
            aItem := int32(aItemTemp)
            aRow = append(aRow, aItem)
        }

        if len(aRow) != int(int(n)) {
            panic("Bad input")
        }

        a = append(a, aRow)
    }

    result := diagonalDifference(a)

    fmt.Fprintf(writer, "%d\n", result)

    writer.Flush()
}

// ---------------------------------------------------
func readLine(reader *bufio.Reader) string {
    str, _, err := reader.ReadLine()
    if err == io.EOF {
        return ""
    }

    return strings.TrimRight(string(str), "\r\n")
}

// ---------------------------------------------------
func checkError(err error) {
    if err != nil {
        panic(err)
    }
}
